#ifndef _ADG704_H
#define	_ADG704_H

#include <xc.h>
#include <stdbool.h>
#include <stdint.h>


/**********************************************************************************************************************************/
/*=== PIN ASSIGNMENTS ============================================================================================================*/
/**********************************************************************************************************************************/	
#define muxEnPin()                      (LATEbits.LATE4)                        // Mux enable pin
#define muxA0Pin()                      (LATEbits.LATE3)                        // Mux signal A0 pin
#define muxA1Pin()                      (LATEbits.LATE2)                        // Mux signal A1 pin

#define muxEn()                         (muxEnPin() = 1)                        // Mux enable
#define muxDis()                        (muxEnPin() = 0)                        // Mux disable

#define muxA0En()                       (muxA0Pin() = 1)                        // Enable A0
#define muxA0Dis()                      (muxA0Pin() = 0)                        // Disable A0

#define muxA1En()                       (muxA1Pin() = 1)                        // Enable A1
#define muxA1Dis()                      (muxA1Pin() = 0)                        // Disable A1

/**********************************************************************************************************************************/
/*=== MACROS =====================================================================================================================*/
/**********************************************************************************************************************************/

/*=== INPUTS =====================================================================================================================*/
#define muxInpS1()                      (0x00)                                  // Mux input S1
#define muxInpS2()                      (0x01)                                  // Mux input S2
#define muxInpS3()                      (0x02)                                  // Mux input S3
#define muxInpS4()                      (0x03)                                  // Mux input S4
#define muxMinInp()                     (muxInpS1())                            // Mux input minimum
#define muxMaxInp()                     (muxInpS4())                            // Mux input maximum

/**********************************************************************************************************************************/
/*=== VARIABLES ==================================================================================================================*/
/**********************************************************************************************************************************/

//--- mux_obj ---------------------------------------------------------------------------------------------------------------------
typedef struct{
    uint8_t inp;                                                                // Mux input selected
}mux_obj;

/**********************************************************************************************************************************/
/*=== FUNCTION PROTOTYPES ========================================================================================================*/
/**********************************************************************************************************************************/

/*** muxInitialize ****************************************************************************************************************/
void muxInitialize(void);

/*** muxSetInp ********************************************************************************************************************/
bool muxSetInp(uint8_t inp);

/*** muxInp ***********************************************************************************************************************/
uint8_t muxInp(void);

#endif                                                                          // End _ADG704_H